// Mocks generated by Mockito 5.4.5 from annotations
// in openvine/test/screens/profile_setup_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i17;
import 'dart:ui' as _i9;

import 'package:image_picker/image_picker.dart' as _i18;
import 'package:image_picker_platform_interface/image_picker_platform_interface.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:nostr_sdk/event.dart' as _i8;
import 'package:nostr_sdk/filter.dart' as _i15;
import 'package:openvine/models/nip94_metadata.dart' as _i16;
import 'package:openvine/models/user_profile.dart' as _i11;
import 'package:openvine/services/auth_service.dart' as _i2;
import 'package:openvine/services/direct_upload_service.dart' as _i5;
import 'package:openvine/services/nostr_key_manager.dart' as _i3;
import 'package:openvine/services/nostr_service_interface.dart' as _i4;
import 'package:openvine/services/profile_cache_service.dart' as _i13;
import 'package:openvine/services/subscription_manager.dart' as _i12;
import 'package:openvine/services/user_profile_service.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResult_0 extends _i1.SmartFake implements _i2.AuthResult {
  _FakeAuthResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNostrKeyManager_1 extends _i1.SmartFake
    implements _i3.NostrKeyManager {
  _FakeNostrKeyManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNostrBroadcastResult_2 extends _i1.SmartFake
    implements _i4.NostrBroadcastResult {
  _FakeNostrBroadcastResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDirectUploadResult_3 extends _i1.SmartFake
    implements _i5.DirectUploadResult {
  _FakeDirectUploadResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_4 extends _i1.SmartFake
    implements _i6.LostDataResponse {
  _FakeLostDataResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i2.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthState get authState => (super.noSuchMethod(
        Invocation.getter(#authState),
        returnValue: _i2.AuthState.unauthenticated,
      ) as _i2.AuthState);

  @override
  _i7.Stream<_i2.AuthState> get authStateStream => (super.noSuchMethod(
        Invocation.getter(#authStateStream),
        returnValue: _i7.Stream<_i2.AuthState>.empty(),
      ) as _i7.Stream<_i2.AuthState>);

  @override
  _i7.Stream<_i2.UserProfile?> get profileStream => (super.noSuchMethod(
        Invocation.getter(#profileStream),
        returnValue: _i7.Stream<_i2.UserProfile?>.empty(),
      ) as _i7.Stream<_i2.UserProfile?>);

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> get userStats => (super.noSuchMethod(
        Invocation.getter(#userStats),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i2.AuthResult> createNewIdentity() => (super.noSuchMethod(
        Invocation.method(
          #createNewIdentity,
          [],
        ),
        returnValue: _i7.Future<_i2.AuthResult>.value(_FakeAuthResult_0(
          this,
          Invocation.method(
            #createNewIdentity,
            [],
          ),
        )),
      ) as _i7.Future<_i2.AuthResult>);

  @override
  _i7.Future<_i2.AuthResult> importFromNsec(String? nsec) =>
      (super.noSuchMethod(
        Invocation.method(
          #importFromNsec,
          [nsec],
        ),
        returnValue: _i7.Future<_i2.AuthResult>.value(_FakeAuthResult_0(
          this,
          Invocation.method(
            #importFromNsec,
            [nsec],
          ),
        )),
      ) as _i7.Future<_i2.AuthResult>);

  @override
  _i7.Future<_i2.AuthResult> importFromHex(String? privateKeyHex) =>
      (super.noSuchMethod(
        Invocation.method(
          #importFromHex,
          [privateKeyHex],
        ),
        returnValue: _i7.Future<_i2.AuthResult>.value(_FakeAuthResult_0(
          this,
          Invocation.method(
            #importFromHex,
            [privateKeyHex],
          ),
        )),
      ) as _i7.Future<_i2.AuthResult>);

  @override
  _i7.Future<void> signOut({bool? deleteKeys = false}) => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
          {#deleteKeys: deleteKeys},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> getPrivateKeyForSigning() => (super.noSuchMethod(
        Invocation.method(
          #getPrivateKeyForSigning,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<String?> exportNsec() => (super.noSuchMethod(
        Invocation.method(
          #exportNsec,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i8.Event?> createAndSignEvent({
    required int? kind,
    required String? content,
    List<List<String>>? tags,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndSignEvent,
          [],
          {
            #kind: kind,
            #content: content,
            #tags: tags,
          },
        ),
        returnValue: _i7.Future<_i8.Event?>.value(),
      ) as _i7.Future<_i8.Event?>);

  @override
  _i7.Future<void> setWebAuthenticationKey(String? publicKeyHex) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWebAuthenticationKey,
          [publicKeyHex],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProfileService extends _i1.Mock
    implements _i10.UserProfileService {
  MockUserProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i11.UserProfile> get allProfiles => (super.noSuchMethod(
        Invocation.getter(#allProfiles),
        returnValue: <String, _i11.UserProfile>{},
      ) as Map<String, _i11.UserProfile>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setSubscriptionManager(_i12.SubscriptionManager? subscriptionManager) =>
      super.noSuchMethod(
        Invocation.method(
          #setSubscriptionManager,
          [subscriptionManager],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPersistentCache(_i13.ProfileCacheService? cacheService) =>
      super.noSuchMethod(
        Invocation.method(
          #setPersistentCache,
          [cacheService],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.UserProfile? getCachedProfile(String? pubkey) =>
      (super.noSuchMethod(Invocation.method(
        #getCachedProfile,
        [pubkey],
      )) as _i11.UserProfile?);

  @override
  bool hasProfile(String? pubkey) => (super.noSuchMethod(
        Invocation.method(
          #hasProfile,
          [pubkey],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> updateCachedProfile(_i11.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedProfile,
          [profile],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i11.UserProfile?> fetchProfile(
    String? pubkey, {
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProfile,
          [pubkey],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i7.Future<_i11.UserProfile?>.value(),
      ) as _i7.Future<_i11.UserProfile?>);

  @override
  _i7.Future<void> fetchMultipleProfiles(
    List<String>? pubkeys, {
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMultipleProfiles,
          [pubkeys],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  String getDisplayName(String? pubkey) => (super.noSuchMethod(
        Invocation.method(
          #getDisplayName,
          [pubkey],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #getDisplayName,
            [pubkey],
          ),
        ),
      ) as String);

  @override
  String? getAvatarUrl(String? pubkey) => (super.noSuchMethod(Invocation.method(
        #getAvatarUrl,
        [pubkey],
      )) as String?);

  @override
  String? getUserBio(String? pubkey) => (super.noSuchMethod(Invocation.method(
        #getUserBio,
        [pubkey],
      )) as String?);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeProfile(String? pubkey) => super.noSuchMethod(
        Invocation.method(
          #removeProfile,
          [pubkey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getCacheStats() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [INostrService].
///
/// See the documentation for Mockito's code generation for more information.
class MockINostrService extends _i1.Mock implements _i4.INostrService {
  MockINostrService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);

  @override
  List<String> get connectedRelays => (super.noSuchMethod(
        Invocation.getter(#connectedRelays),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get hasKeys => (super.noSuchMethod(
        Invocation.getter(#hasKeys),
        returnValue: false,
      ) as bool);

  @override
  _i3.NostrKeyManager get keyManager => (super.noSuchMethod(
        Invocation.getter(#keyManager),
        returnValue: _FakeNostrKeyManager_1(
          this,
          Invocation.getter(#keyManager),
        ),
      ) as _i3.NostrKeyManager);

  @override
  int get relayCount => (super.noSuchMethod(
        Invocation.getter(#relayCount),
        returnValue: 0,
      ) as int);

  @override
  int get connectedRelayCount => (super.noSuchMethod(
        Invocation.getter(#connectedRelayCount),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> initialize({List<String>? customRelays}) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {#customRelays: customRelays},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<_i8.Event> subscribeToEvents(
          {required List<_i15.Filter>? filters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToEvents,
          [],
          {#filters: filters},
        ),
        returnValue: _i7.Stream<_i8.Event>.empty(),
      ) as _i7.Stream<_i8.Event>);

  @override
  _i7.Future<_i4.NostrBroadcastResult> broadcastEvent(_i8.Event? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcastEvent,
          [event],
        ),
        returnValue: _i7.Future<_i4.NostrBroadcastResult>.value(
            _FakeNostrBroadcastResult_2(
          this,
          Invocation.method(
            #broadcastEvent,
            [event],
          ),
        )),
      ) as _i7.Future<_i4.NostrBroadcastResult>);

  @override
  _i7.Future<_i4.NostrBroadcastResult> publishFileMetadata({
    required _i16.NIP94Metadata? metadata,
    required String? content,
    List<String>? hashtags = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishFileMetadata,
          [],
          {
            #metadata: metadata,
            #content: content,
            #hashtags: hashtags,
          },
        ),
        returnValue: _i7.Future<_i4.NostrBroadcastResult>.value(
            _FakeNostrBroadcastResult_2(
          this,
          Invocation.method(
            #publishFileMetadata,
            [],
            {
              #metadata: metadata,
              #content: content,
              #hashtags: hashtags,
            },
          ),
        )),
      ) as _i7.Future<_i4.NostrBroadcastResult>);

  @override
  _i7.Future<_i4.NostrBroadcastResult> publishVideoEvent({
    required String? videoUrl,
    required String? content,
    String? title,
    String? thumbnailUrl,
    int? duration,
    String? dimensions,
    String? mimeType,
    String? sha256,
    int? fileSize,
    List<String>? hashtags = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishVideoEvent,
          [],
          {
            #videoUrl: videoUrl,
            #content: content,
            #title: title,
            #thumbnailUrl: thumbnailUrl,
            #duration: duration,
            #dimensions: dimensions,
            #mimeType: mimeType,
            #sha256: sha256,
            #fileSize: fileSize,
            #hashtags: hashtags,
          },
        ),
        returnValue: _i7.Future<_i4.NostrBroadcastResult>.value(
            _FakeNostrBroadcastResult_2(
          this,
          Invocation.method(
            #publishVideoEvent,
            [],
            {
              #videoUrl: videoUrl,
              #content: content,
              #title: title,
              #thumbnailUrl: thumbnailUrl,
              #duration: duration,
              #dimensions: dimensions,
              #mimeType: mimeType,
              #sha256: sha256,
              #fileSize: fileSize,
              #hashtags: hashtags,
            },
          ),
        )),
      ) as _i7.Future<_i4.NostrBroadcastResult>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DirectUploadService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectUploadService extends _i1.Mock
    implements _i5.DirectUploadService {
  MockDirectUploadService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get activeUploads => (super.noSuchMethod(
        Invocation.getter(#activeUploads),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<_i5.DirectUploadResult> uploadVideo({
    required _i17.File? videoFile,
    required String? nostrPubkey,
    String? title,
    String? description,
    List<String>? hashtags,
    void Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadVideo,
          [],
          {
            #videoFile: videoFile,
            #nostrPubkey: nostrPubkey,
            #title: title,
            #description: description,
            #hashtags: hashtags,
            #onProgress: onProgress,
          },
        ),
        returnValue:
            _i7.Future<_i5.DirectUploadResult>.value(_FakeDirectUploadResult_3(
          this,
          Invocation.method(
            #uploadVideo,
            [],
            {
              #videoFile: videoFile,
              #nostrPubkey: nostrPubkey,
              #title: title,
              #description: description,
              #hashtags: hashtags,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i7.Future<_i5.DirectUploadResult>);

  @override
  _i7.Future<void> cancelUpload(String? videoId) => (super.noSuchMethod(
        Invocation.method(
          #cancelUpload,
          [videoId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<double>? getProgressStream(String? videoId) =>
      (super.noSuchMethod(Invocation.method(
        #getProgressStream,
        [videoId],
      )) as _i7.Stream<double>?);

  @override
  bool isUploading(String? videoId) => (super.noSuchMethod(
        Invocation.method(
          #isUploading,
          [videoId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<_i5.DirectUploadResult> uploadProfilePicture({
    required _i17.File? imageFile,
    required String? nostrPubkey,
    void Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePicture,
          [],
          {
            #imageFile: imageFile,
            #nostrPubkey: nostrPubkey,
            #onProgress: onProgress,
          },
        ),
        returnValue:
            _i7.Future<_i5.DirectUploadResult>.value(_FakeDirectUploadResult_3(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [],
            {
              #imageFile: imageFile,
              #nostrPubkey: nostrPubkey,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i7.Future<_i5.DirectUploadResult>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i18.ImagePicker {
  MockImagePicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i6.XFile?> pickImage({
    required _i6.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i6.CameraDevice? preferredCameraDevice = _i6.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i6.XFile?>.value(),
      ) as _i7.Future<_i6.XFile?>);

  @override
  _i7.Future<List<_i6.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i6.XFile>>.value(<_i6.XFile>[]),
      ) as _i7.Future<List<_i6.XFile>>);

  @override
  _i7.Future<_i6.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i6.XFile?>.value(),
      ) as _i7.Future<_i6.XFile?>);

  @override
  _i7.Future<List<_i6.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i6.XFile>>.value(<_i6.XFile>[]),
      ) as _i7.Future<List<_i6.XFile>>);

  @override
  _i7.Future<_i6.XFile?> pickVideo({
    required _i6.ImageSource? source,
    _i6.CameraDevice? preferredCameraDevice = _i6.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i7.Future<_i6.XFile?>.value(),
      ) as _i7.Future<_i6.XFile?>);

  @override
  _i7.Future<_i6.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i7.Future<_i6.LostDataResponse>.value(_FakeLostDataResponse_4(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i7.Future<_i6.LostDataResponse>);

  @override
  bool supportsImageSource(_i6.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
      ) as bool);
}
