// Mocks generated by Mockito 5.4.5 from annotations
// in openvine/test/services/video_playback_controller_mock_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:video_player/src/closed_caption_file.dart' as _i6;
import 'package:video_player/video_player.dart' as _i2;
import 'package:video_player_platform_interface/video_player_platform_interface.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVideoPlayerValue_0 extends _i1.SmartFake
    implements _i2.VideoPlayerValue {
  _FakeVideoPlayerValue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VideoPlayerController].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoPlayerController extends _i1.Mock
    implements _i2.VideoPlayerController {
  MockVideoPlayerController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get dataSource => (super.noSuchMethod(
        Invocation.getter(#dataSource),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dataSource),
        ),
      ) as String);

  @override
  Map<String, String> get httpHeaders => (super.noSuchMethod(
        Invocation.getter(#httpHeaders),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i4.DataSourceType get dataSourceType => (super.noSuchMethod(
        Invocation.getter(#dataSourceType),
        returnValue: _i4.DataSourceType.asset,
      ) as _i4.DataSourceType);

  @override
  _i4.VideoViewType get viewType => (super.noSuchMethod(
        Invocation.getter(#viewType),
        returnValue: _i4.VideoViewType.textureView,
      ) as _i4.VideoViewType);

  @override
  int get playerId => (super.noSuchMethod(
        Invocation.getter(#playerId),
        returnValue: 0,
      ) as int);

  @override
  _i5.Future<Duration?> get position => (super.noSuchMethod(
        Invocation.getter(#position),
        returnValue: _i5.Future<Duration?>.value(),
      ) as _i5.Future<Duration?>);

  @override
  _i2.VideoPlayerValue get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: _FakeVideoPlayerValue_0(
          this,
          Invocation.getter(#value),
        ),
      ) as _i2.VideoPlayerValue);

  @override
  set value(_i2.VideoPlayerValue? newValue) => super.noSuchMethod(
        Invocation.setter(
          #value,
          newValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> play() => (super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setLooping(bool? looping) => (super.noSuchMethod(
        Invocation.method(
          #setLooping,
          [looping],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> seekTo(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seekTo,
          [position],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setPlaybackSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #setPlaybackSpeed,
          [speed],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void setCaptionOffset(Duration? offset) => super.noSuchMethod(
        Invocation.method(
          #setCaptionOffset,
          [offset],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> setClosedCaptionFile(
          _i5.Future<_i6.ClosedCaptionFile>? closedCaptionFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #setClosedCaptionFile,
          [closedCaptionFile],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
