name: Multi-Agent Quality Gates

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  flutter-analysis:
    name: Flutter Analysis & Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze project source
      run: flutter analyze --fatal-infos --fatal-warnings
      
    - name: Run unit tests
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run integration tests
      run: flutter test integration_test/
      
  multi-agent-coordination:
    name: Multi-Agent Coordination Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check CODEOWNERS compliance
      run: |
        # Verify CODEOWNERS file exists and is properly formatted
        if [ ! -f CODEOWNERS ]; then
          echo "‚ùå CODEOWNERS file missing"
          exit 1
        fi
        echo "‚úÖ CODEOWNERS file exists"
        
    - name: Validate file ownership
      run: |
        # Check if PR modifies files outside of conventional agent boundaries
        echo "üîç Checking file ownership compliance..."
        
        # Get list of changed files
        git diff --name-only HEAD~1 HEAD > changed_files.txt
        
        # Check for cross-agent file modifications (simplified check)
        if grep -q "lib/screens/" changed_files.txt && grep -q "lib/services/" changed_files.txt; then
          echo "‚ö†Ô∏è  PR modifies both UI and Services layers - verify agent coordination"
        fi
        
        echo "‚úÖ File ownership check complete"
        
    - name: Check for proper agent attribution
      run: |
        # Verify PR has proper agent attribution in title or description
        if [[ "${{ github.event.pull_request.title }}" =~ \[.*Agent.*\] ]] || \
           [[ "${{ github.event.pull_request.body }}" =~ "Agent:" ]]; then
          echo "‚úÖ PR has proper agent attribution"
        else
          echo "‚ö†Ô∏è  PR missing agent attribution - add [AgentName] to title or Agent: field to description"
        fi
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
        
    - name: Check for secrets
      run: |
        # Simple check for potential secrets (expand as needed)
        if grep -r "api_key\|password\|secret\|token" lib/ --exclude-dir=test; then
          echo "‚ö†Ô∏è  Potential secrets found - review carefully"
        else
          echo "‚úÖ No obvious secrets detected"
        fi
        
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [android, web]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build for ${{ matrix.platform }}
      run: |
        if [ "${{ matrix.platform }}" == "android" ]; then
          flutter build apk --debug
        else
          flutter build web
        fi
        
  performance-check:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run performance tests
      run: |
        # Run any performance-specific tests
        flutter test test/performance/ || echo "No performance tests found"
        
    - name: Check app size
      run: |
        # Build and check app size
        flutter build apk --debug
        APK_SIZE=$(stat -f%z build/app/outputs/apk/debug/app-debug.apk 2>/dev/null || stat -c%s build/app/outputs/apk/debug/app-debug.apk)
        echo "üì± APK Size: $APK_SIZE bytes"
        
        # Set a reasonable size limit (adjust as needed)
        MAX_SIZE=50000000  # 50MB
        if [ $APK_SIZE -gt $MAX_SIZE ]; then
          echo "‚ö†Ô∏è  APK size exceeds limit"
        else
          echo "‚úÖ APK size within limits"
        fi